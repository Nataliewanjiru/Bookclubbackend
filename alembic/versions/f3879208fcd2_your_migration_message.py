"""Your migration message

Revision ID: f3879208fcd2
Revises: 
Create Date: 2023-11-06 18:02:13.115704

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f3879208fcd2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("ALTER TABLE clubusers DROP CONSTRAINT IF EXISTS clubusers_clubID_fkey")
    op.execute("ALTER TABLE reviews DROP CONSTRAINT IF EXISTS reviews_clubID_fkey")
    op.execute("ALTER TABLE books DROP CONSTRAINT IF EXISTS books_clubID_fkey")

    op.drop_table('clubs')
    op.drop_table('clubusers')
    op.drop_table('summaries')
    op.drop_table('followers')
    op.drop_table('books')
    op.drop_table('users')
    op.drop_table('reviews')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reviews',
    sa.Column('ratingID', sa.INTEGER(), server_default=sa.text('nextval(\'"reviews_ratingID_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('clubID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('memberID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('rating', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('comment', sa.TEXT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['clubID'], ['clubs.clubID'], name='reviews_clubID_fkey'),
    sa.ForeignKeyConstraint(['memberID'], ['users.id'], name='reviews_memberID_fkey'),
    sa.PrimaryKeyConstraint('ratingID', name='reviews_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(length=8), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('books',
    sa.Column('bookID', sa.INTEGER(), server_default=sa.text('nextval(\'"books_bookID_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('author', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('synopsis', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('chapters', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('imageURL', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('clubID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['clubID'], ['clubs.clubID'], name='books_clubID_fkey'),
    sa.PrimaryKeyConstraint('bookID', name='books_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('followers',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('follower_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['follower_id'], ['users.id'], name='followers_follower_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='followers_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', 'follower_id', name='followers_pkey')
    )
    op.create_table('summaries',
    sa.Column('summaryID', sa.INTEGER(), server_default=sa.text('nextval(\'"summaries_summaryID_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('summary', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('bookID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('userID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['bookID'], ['books.bookID'], name='summaries_bookID_fkey'),
    sa.ForeignKeyConstraint(['userID'], ['users.id'], name='summaries_userID_fkey'),
    sa.PrimaryKeyConstraint('summaryID', name='summaries_pkey')
    )
    op.create_table('clubusers',
    sa.Column('memberID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('clubID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['clubID'], ['clubs.clubID'], name='clubusers_clubID_fkey'),
    sa.ForeignKeyConstraint(['memberID'], ['users.id'], name='clubusers_memberID_fkey'),
    sa.PrimaryKeyConstraint('memberID', 'clubID', name='clubusers_pkey')
    )
    op.create_table('clubs',
    sa.Column('clubID', sa.INTEGER(), server_default=sa.text('nextval(\'"clubs_clubID_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('nameOfClub', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('imageURL', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('dateFounded', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('clubID', name='clubs_pkey')
    )
    # ### end Alembic commands ###
